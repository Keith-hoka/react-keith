{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/keithho/Downloads/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\",\n    _this = this;\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nvar MeetupDetails = function MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/5/53/Sydney_Opera_House_and_Harbour_Bridge_Dusk_%282%29_2019-06-21.jpg/2560px-Sydney_Opera_House_and_Harbour_Bridge_Dusk_%282%29_2019-06-21.jpg\",\n    title: \"This is Sydney\",\n    address: \"1 George St, Sydney 2000.\",\n    description: \"Sydney is the first meetup.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/Users/keithho/Downloads/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails","props"],"mappings":";;;;;AAEA,OAAOA,YAAP,MAAyB,uCAAzB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,sMADR;AAEE,IAAA,KAAK,EAAC,gBAFR;AAGE,IAAA,OAAO,EAAC,2BAHV;AAIE,IAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,WADF;AAQD,CATD;;KAAMD,a;;AAoDN,eAAeA,aAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetupDetails = (props) => {\n  return (\n    <MeetupDetail\n      image=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/53/Sydney_Opera_House_and_Harbour_Bridge_Dusk_%282%29_2019-06-21.jpg/2560px-Sydney_Opera_House_and_Harbour_Bridge_Dusk_%282%29_2019-06-21.jpg\"\n      title=\"This is Sydney\"\n      address=\"1 George St, Sydney 2000.\"\n      description=\"Sydney is the first meetup.\"\n    />\n  );\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://Keith-Next:MiMNk0yG6uCkRbn2@keithcluster.qhg7v.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n\n  const meetupCollection = db.collection(\"meetups\");\n\n  const meetups = await meetupCollection.find({}, { _id: 1 }).toArray();\n\n  client.close();\n\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => ({\n      params: { meetupId: meetup._id.toString() },\n    })),\n  };\n}\n\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n\n  const client = await MongoClient.connect(\n    \"mongodb+srv://Keith-Next:MiMNk0yG6uCkRbn2@keithcluster.qhg7v.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n\n  const meetupCollection = db.collection(\"meetups\");\n\n  const selectedMeetup = await meetupCollection.findOne({ _id: meetupId });\n\n  client.close();\n\n  return {\n    props: {\n      meetupData: selectedMeetup,\n    },\n  };\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}